namespace = german_culture_events

# Form unified german culture
german_culture_events.0001 = {
	type = character_event
	hidden = yes

	immediate = {
		# Convert region's titles to German
		every_county_in_region = {
			region = german_unified_lands
			limit = {
				OR = {
					holder = root
					holder.top_liege = root
				}
			}
			set_county_culture = culture:unified_german
		}

		# Reset creation date to now
		culture:unified_german = {
			hidden_effect = {
				reset_culture_creation_date = yes
			}
		}
		
		# Convert enactor, and enactors whole family's culture
		set_culture = culture:unified_german
		if = {
			limit = { any_spouse = { is_playable_character = no } }
			every_spouse = {
				limit = {
					is_playable_character = no
					OR = {
						culture = culture:bavarian
						culture = culture:dutch
						culture = culture:franconian
						culture = culture:frisian
						culture = culture:german
						culture = culture:langobard
						culture = culture:saxon
						culture = culture:swabian
						culture = culture:prussian
					}
				}
				set_culture = culture:unified_german
			}
		}
		if = {
			limit = {
				any_close_family_member = {
					is_playable_character = no
					NOT = { is_spouse_of = root }
				}
			}
			every_close_family_member = {
				limit = {
					is_playable_character = no
					NOT = { is_spouse_of = root }
				}
				custom = all_unlanded_family_members
				set_culture = culture:unified_german
			}
		}
		if = {
			limit = {
				any_child = {
					NOT = { is_spouse_of = root }
				}
			}
			every_child = {
				limit = {
					NOT = { is_spouse_of = root }
				}
				custom = all_children_custom
				set_culture = culture:unified_german
			}
		}

		#Convert appropriate vassals, and their family
		if = {
			limit = {
				any_vassal_or_below = {
					is_ai = yes
					OR = {
						culture = culture:bavarian
						culture = culture:dutch
						culture = culture:franconian
						culture = culture:frisian
						culture = culture:german
						culture = culture:langobard
						culture = culture:saxon
						culture = culture:swabian
						culture = culture:prussian
					}
				}
			}
			every_vassal_or_below = {
				limit = {
					is_ai = yes
					OR = {
						culture = culture:bavarian
						culture = culture:dutch
						culture = culture:franconian
						culture = culture:frisian
						culture = culture:german
						culture = culture:langobard
						culture = culture:saxon
						culture = culture:swabian
						culture = culture:prussian
					}
				}
				set_culture = culture:unified_german
				hidden_effect = {
					if = {
						limit = { any_spouse = { is_playable_character = no } }
						every_spouse = {
							limit = {
								is_playable_character = no
								OR = {
									culture = culture:bavarian
									culture = culture:dutch
									culture = culture:franconian
									culture = culture:frisian
									culture = culture:german
									culture = culture:langobard
									culture = culture:saxon
									culture = culture:swabian
									culture = culture:prussian
								}
							}
							set_culture = culture:unified_german
						}
					}
					if = {
						limit = {
							any_close_family_member = {
								is_playable_character = no
								NOT = { is_spouse_of = prev }
							}
						}
						every_close_family_member = {
							limit = {
								is_playable_character = no
								NOT = { is_spouse_of = prev }
							}
							custom = all_unlanded_family_members
							set_culture = culture:unified_german
						}
					}
					if = {
						limit = {
							any_child = {
								NOT = { is_spouse_of = prev }
							}
						}
						every_child = {
							limit = {
								NOT = { is_spouse_of = prev }
							}
							custom = all_children_custom
							set_culture = culture:unified_german
						}
					}
					if = {
						limit = {
							any_vassal_or_below = {
								is_ai = yes
								OR = {
									culture = culture:bavarian
									culture = culture:dutch
									culture = culture:franconian
									culture = culture:frisian
									culture = culture:german
									culture = culture:langobard
									culture = culture:saxon
									culture = culture:swabian
									culture = culture:prussian
								}
							}
						}
						every_vassal_or_below = {
							limit = {
								is_ai = yes
								OR = {
									culture = culture:bavarian
									culture = culture:dutch
									culture = culture:franconian
									culture = culture:frisian
									culture = culture:german
									culture = culture:langobard
									culture = culture:saxon
									culture = culture:swabian
									culture = culture:prussian
								}
							}
							set_culture = culture:unified_german
							hidden_effect = {
								if = {
									limit = { any_spouse = { is_playable_character = no } }
									every_spouse = {
										limit = {
											is_playable_character = no
											OR = {
												culture = culture:bavarian
												culture = culture:dutch
												culture = culture:franconian
												culture = culture:frisian
												culture = culture:german
												culture = culture:langobard
												culture = culture:saxon
												culture = culture:swabian
												culture = culture:prussian
											}
										}
										set_culture = culture:unified_german
									}
								}
								if = {
									limit = {
										any_close_family_member = {
											is_playable_character = no
											NOT = { is_spouse_of = prev }
										}
									}
									every_close_family_member = {
										limit = {
											is_playable_character = no
											NOT = { is_spouse_of = prev }
										}
										custom = all_unlanded_family_members
										set_culture = culture:unified_german
									}
								}
								if = {
									limit = {
										any_child = {
											NOT = { is_spouse_of = prev }
										}
									}
									every_child = {
										limit = {
											NOT = { is_spouse_of = prev }
										}
										custom = all_children_custom
										set_culture = culture:unified_german
									}
								}
							}
						}
					}
				}
			}
		}

	}
}